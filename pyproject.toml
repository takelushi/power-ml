[tool.poetry]
name = "power-ml"
version = "1.0.0-alpha.2"
description = "Empowerment Python Machine Learing Stack."
authors = ["Takeru Saito <takelushi@gmail.com>"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/takelushi/power-ml"


[tool.poetry.dependencies]
python = "^3.7"
numpy = "^1.0.0"
scikit-learn = "^0.24.1"
pandas = "^1.0.0"
psutil = "^5.8.0"
joblib = "^1.0.0"
tinydb = "^4.3.0"
combu = "^1.2.1"
loguru = "^0.5.3"

[tool.poetry.dev-dependencies]
pytest = "^6.2.2"
yapf = "^0.30.0"
isort = "^5.7.0"
flake8 = "^3.8.4"
mypy = "^0.800"
cohesion = "^1.0.0"
flake8-blind-except = "^0.2.0"
flake8-bugbear = "^20.11.1"
flake8-builtins = "^1.5.3"
flake8-class-newline = "^1.6.0"
flake8-coding = "^1.3.2"
flake8-commas = "^2.0.0"
flake8-comprehensions = "^3.3.1"
flake8-docstrings = "^1.5.0"
flake8-eradicate = "^1.0.0"
flake8-import-order = "^0.18.1"
flake8-quotes = "^3.2.0"
pep8-naming = "^0.11.1"
flake8-html = "^0.4.1"
lxml = "^4.6.2"
pytest-html = "^3.1.1"
pytest-cov = "^2.11.1"
boto3-stubs = {extras = ["s3"], version = "^1.16.63"}
boto3 = "^1.17.0"
lightgbm = "^3.1.1"
darglint = "^1.6.0"
flake8-2020 = "^1.6.0"
flake8-absolute-import = "^1.0"
flake8-breakpoint = "^1.1.0"
flake8-cognitive-complexity = "^0.1.0"
flake8-debugger = "^4.0.0"
flake8-expression-complexity = "^0.0.9"
flake8-fixme = "^1.1.1"
flake8-functions = "^0.0.5"
flake8-logging-format = "^0.6.0"
flake8-multiline-containers = "^0.0.17"
flake8-mutable = "^1.2.0"
flake8-pep3101 = "^1.3.0"
flake8-pie = "^0.6.1"
flake8-print = "^4.0.0"
flake8-printf-formatting = "^1.1.2"
flake8-pyi = "^20.10.0"
flake8-pytest-style = "^1.3.0"
flake8-return = "^1.1.2"
flake8-simplify = "^0.13.0"
flake8-string-format = "^0.3.0"

[tool.poetry.urls]
issues = "https://github.com/takelushi/power-ml/issues"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "google"
line_length = "79"
force_single_line = false
known_first_party = ["power_ai"]

[tool.pytest.ini_options]
minversion = "6.2"
addopts = "--cov=src/ --cov-report term-missing"
testpaths = [
    "tests"
]
